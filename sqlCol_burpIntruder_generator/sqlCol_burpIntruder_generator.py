#!/usr/bin/env python3
import os
import argparse

help_msg = """
Welcome to sqli_col_payload generator !
Simple payload generator for BurpIntruder/TurboIntruder:
	Use this to generate a .txt file containing list of increasing arbitrary parameters for burp's intruder payload.

Example usage:
	python3 sqlCol_burpIntrude_generator.py -o test -n 5 str -p null

	python3 sqlCol_burpIntrude_generator.py -o test -n 5 int -i
	"""


parser = argparse.ArgumentParser(description=help_msg, formatter_class=argparse.RawTextHelpFormatter)

parser.add_argument('-o', '--output', type=str, required=True, help="Specifiy file name to save as, do NOT specify any file extensions.")
parser.add_argument('-n', '--number', type=int , required=True, help="Specify the maximum number of columns payload to generate.")


subparser_operation = parser.add_subparsers(dest = "operation", required=True, help="Specify the type of operation. eg. str -p 'payload' || int -i")

string_parser = subparser_operation.add_parser("str", help="string mode")
string_parser.add_argument('-p', '--payload',type=str, required=True, help="Specify payload.")

integer_parser = subparser_operation.add_parser("int", help="integer mode")
integer_parser.add_argument('-i', '--int', required=True, action='store_true', help="include -i/--int flag")

args = parser.parse_args()

writePath = args.output + '.txt'
f = open(writePath, "w").close() # Clean file
f = open(writePath, "a")

mut_str = ''

if args.operation == "str":
	for i in range(0,args.number):
		if i < args.number-1:
			mut_str += args.payload + ','
			f.write(mut_str + '\n')
		elif i == args.number-1:
			mut_str += args.payload
			f.write(mut_str + '\n')
	f.close()

if args.operation == "int":
	for i in range(0,args.number):
		if i+1 == 1:
			mut_str = str(i+1)
			f.write(mut_str + '\n')
		elif i < args.number-1 and i+1 > 1:
			mut_str += ',' + str(i+1)
			f.write(mut_str + '\n')
		elif i == args.number-1:
			mut_str += ',' + str(i+1)
			f.write(mut_str)
	f.close()



